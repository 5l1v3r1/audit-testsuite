#!/usr/bin/perl

use strict;

use Test;
BEGIN { plan tests => 3 }

use File::Temp qw/ tempfile /;

my $basedir = $0;
$basedir =~ s|(.*)/[^/]*|$1|;

my $AUDIT_BPF = 1334;

###
# functions

sub key_gen {
    my @chars = ( "A" .. "Z", "a" .. "z" );
    my $key   = "testsuite-" . time . "-";
    $key .= $chars[ rand @chars ] for 1 .. 8;
    return $key;
}

###
# setup

chomp( my $abi_bits = $ENV{MODE} != 0 ? $ENV{MODE} : `getconf LONG_BIT` );

# reset audit
system("auditctl -D >& /dev/null");

# create stdout/stderr sinks
( my $fh_out, my $stdout ) = tempfile(
    TEMPLATE => '/tmp/audit-testsuite-out-XXXX',
    UNLINK   => 1
);
( my $fh_err, my $stderr ) = tempfile(
    TEMPLATE => '/tmp/audit-testsuite-err-XXXX',
    UNLINK   => 1
);

###
# tests

# set the socketcall filter
my $key = key_gen();

# reset audit
system("auditctl -D >& /dev/null");

# connect
system("auditctl -a always,exit -F arch=b$abi_bits -S bpf -k $key");

# run the test
system("$basedir/bpf");

for ( my $i = 0 ; $i < 10 ; $i++ ) {
    if ( system("ausearch -m $AUDIT_BPF -k $key") eq 0 ) {
        last;
    }
    sleep(0.2);
}

# test if we generate any basic audit records from the filter rule
my $result =
  system("ausearch -ts recent -m $AUDIT_BPF -k $key > $stdout 2> $stderr");
ok( $result, 0 );

my $line;
my $found_load   = 0;
my $found_unload = 0;
my $prog_id      = 0;

# find the LOAD event (reuse the ausearch output from above)
while ( $line = <$fh_out> ) {
    if ( $line =~ /op=LOAD/ && $line =~ /prog-id=(\d+)/ ) {
        $found_load = 1;
        $prog_id    = $1;
        last;
    }
}

# find the UNLOAD event (we can't use the key since the record is unassociated)
if ( $found_load == 1 ) {
    my $result =
      system("ausearch -ts recent -m $AUDIT_BPF > $stdout 2> $stderr");
    while ( $line = <$fh_out> ) {
        if ( $line =~ /op=UNLOAD/ && $line =~ /prog-id=(\d+)/ ) {
            $found_unload = 1;
            $prog_id      = $1;
            last;
        }
    }
}

ok($found_load);
ok($found_unload);

###
# cleanup

system("service auditd restart 2>/dev/null");
